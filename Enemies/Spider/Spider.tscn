[gd_scene load_steps=10 format=2]

[ext_resource path="res://Enemies/Spider/Spider.gd" type="Script" id=1]
[ext_resource path="res://Enemies/Spider/spider_walk2.png" type="Texture" id=2]
[ext_resource path="res://Enemies/Spider/spider_walk1.png" type="Texture" id=3]
[ext_resource path="res://Enemies/Spider/mud_02.ogg" type="AudioStream" id=4]

[sub_resource type="Animation" id=1]
resource_name = "die"
length = 0.5
tracks/0/type = "value"
tracks/0/path = NodePath(".:scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.2, 0.5 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ Vector2( 1, 1 ), Vector2( 1.5, 1.5 ), Vector2( 0.01, 0.01 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("CollisionShape2D:disabled")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ true ]
}
tracks/2/type = "method"
tracks/2/path = NodePath(".")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0.5 ),
"transitions": PoolRealArray( 1 ),
"values": [ {
"args": [  ],
"method": "die"
} ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("Squish:playing")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ true ]
}

[sub_resource type="Animation" id=2]
resource_name = "walk"
length = 10.0
loop = true
step = 1.0
tracks/0/type = "value"
tracks/0/path = NodePath(".:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 2, 3, 7, 8, 10 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ Vector2( 0, 0 ), Vector2( -200, 0 ), Vector2( -200, 0 ), Vector2( 200, 0 ), Vector2( 200, 0 ), Vector2( 0, 0 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("AnimatedSprite:flip_h")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 3, 8 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 1,
"values": [ false, true, false ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("CollisionShape2D:disabled")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ false ]
}

[sub_resource type="SpriteFrames" id=3]
animations = [ {
"frames": [ ExtResource( 3 ), ExtResource( 2 ) ],
"loop": true,
"name": "walk",
"speed": 5.0
} ]

[sub_resource type="RectangleShape2D" id=4]
extents = Vector2( 38, 18 )

[sub_resource type="RectangleShape2D" id=5]
extents = Vector2( 26, 3 )

[node name="Spider" type="Node2D"]

[node name="Spider" type="Area2D" parent="." groups=[
"enemy",
]]
collision_layer = 2
script = ExtResource( 1 )

[node name="SpiderAnimation" type="AnimationPlayer" parent="Spider"]
autoplay = "walk"
anims/die = SubResource( 1 )
anims/walk = SubResource( 2 )

[node name="AnimatedSprite" type="AnimatedSprite" parent="Spider"]
frames = SubResource( 3 )
animation = "walk"
frame = 1
playing = true

[node name="CollisionShape2D" type="CollisionShape2D" parent="Spider"]
position = Vector2( -0.330898, 10 )
shape = SubResource( 4 )

[node name="Stomp" type="Area2D" parent="Spider"]
position = Vector2( -33.3309, 0 )
collision_layer = 2

[node name="StompCollision" type="CollisionShape2D" parent="Spider/Stomp"]
process_priority = 1
position = Vector2( 32.3309, -18 )
shape = SubResource( 5 )

[node name="StompTimer" type="Timer" parent="Spider/Stomp"]
one_shot = true

[node name="Squish" type="AudioStreamPlayer2D" parent="Spider"]
stream = ExtResource( 4 )

[connection signal="body_entered" from="Spider" to="Spider" method="_on_Spider_body_entered"]
[connection signal="body_entered" from="Spider/Stomp" to="Spider" method="_on_Stomp_body_entered"]
[connection signal="timeout" from="Spider/Stomp/StompTimer" to="Spider" method="_on_StompDisable_timeout"]
